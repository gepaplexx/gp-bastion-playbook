---
- name: Prepare hosts for ansible
  tags: prepare-hosts
  hosts: all
  become: yes
  tasks:
    - lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'


- name: Install needed packages and tools for service
  tags: prepare-hosts
  hosts: service
  become: yes
  pre_tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
  tasks:
    - name: Install required packages
      apt:
        name: 
          - mlocate


- name: Install needed packages and tools
  tags: prepare-hosts
  hosts: bastion
  become: yes
  vars_files:
    - default.config.yml
  pre_tasks:
    - name: Add apt-key for Helm
      apt_key:
        url: "{{ helm_apt_key_url }}"
    - name: Add repo for Helm
      apt_repository:
        repo: "{{ helm_repo }}"
        state: present
        filename: helm-stable-debian
    - name: Update apt cache
      apt:
        update_cache: yes
  tasks:
    - name: Install required packages
      apt:
        name: 
          - git
          - python3-pip
          - helm
          - docker.io
          - mlocate
    - name: Download oc client
      get_url: 
        url: "{{ oc_binary_url }}"
        dest: /tmp/oc.tar.gz
        mode: '0777'
    - name: Extract oc client
      unarchive:
        src: /tmp/oc.tar.gz
        dest: /tmp/
        remote_src: yes
    - name: Copy oc binary to /usr/local/bin
      copy:
        src: /tmp/oc
        dest: /usr/local/bin/oc
        mode: "0777"
        remote_src: yes
    - name: "Ensure service docker is started and enabled"
      service:
        name: "docker"
        enabled: true


- name: create users
  tags: create-users
  hosts: all
  become: yes
  vars:
    users:
      - gituser: ckaserer
        localuser: ckaserer
      - gituser: hwirnsberger
        localuser: hwirnsberger
      - gituser: gattma
        localuser: mgattringer
      - gituser: mario-oberwalder
        localuser: moberwalder
      - gituser: rwrabel
        localuser: rwrabel
      - gituser: dazierler
        localuser: rzierler
  tasks:
    - name: Add User
      ansible.builtin.user:
        name: "{{item.localuser}}"
        groups: sudo
        append: yes
        shell: /bin/bash
      with_items: "{{users}}"
    - name: Add docker group to user
      when: "'bastion' == inventory_hostname"
      ansible.builtin.user:
        name: "{{item.localuser}}"
        groups: docker
        append: yes
      with_items: "{{users}}"
    - name: Set authorized keys taken from url
      ansible.posix.authorized_key:
        user: "{{item.localuser}}"
        state: present
        key: "https://github.com/{{item.gituser}}.keys"
      with_items: "{{users}}"
    - name: Add User Ansible
      ansible.builtin.user:
        name: ansible
        groups: sudo
        append: yes
        generate_ssh_key: true
        shell: /bin/bash
      register: my_ansible_user
    - name: Add docker group to user ansible
      when: "'bastion' == inventory_hostname"
      ansible.builtin.user:
        name: ansible
        groups: docker
        append: yes
    - name: Set authorized keys
      ansible.posix.authorized_key:
        user: ansible
        state: present
        key: "{{ item }}"
      with_items:
        - "{{ hostvars['bastion']['my_ansible_user']['ssh_public_key'] }}"
        - "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAg+6+erKHD5vmnd9gomvxNWb+zeBi8zJTN0pyiSArsqx46Hr2uFQJ5xax0TKnIZZ7mE5sd+ljtvisD1uKPZftBvZHlvSr+17j1JuAKw0U07Yiji+ZQZqpIoMI74xRMPWQSKSPAARnqNOIgq3j/O4E6uYHgSgcyNB0jxWOh2i8ehlbdSMAfUExIyr8dYni1PmrvfVClayfUFkVdwFExfjX9pZeurdO3G9vkngY2F3BWdmeKTSYp7HKWWiE585RPg5jLdptK4DCp6e4J61AfI/P6+w4OmKh3EK8E4W3sOpRq3K9nYEAk7BF8LLUtqGqZLg0kytqfJVtmHL11OYs82SQCw== ansible-backup 20210324"
    - name: Add known_hosts to ansible
      become_user: ansible
      when: "'bastion' == inventory_hostname"
      ansible.builtin.shell: "ssh-keyscan {{network_ip}}.2 > ${HOME}/.ssh/known_hosts"
    - name: Add known_hosts to ansible
      become_user: ansible
      when: "'bastion' == inventory_hostname"
      ansible.builtin.shell: "ssh-keyscan {{network_ip}}.3 >> ${HOME}/.ssh/known_hosts"
      

- name: prepare github action runner
  hosts: bastion
  become: yes
  become_user: ansible
  tags: github-action
  tasks:
    - name: create folder in homedirectory from user ansible
      file:
        path: ${HOME}/actions-runner
        state: directory
    - name: download github runner
      ansible.builtin.unarchive:
        src: https://github.com/actions/runner/releases/download/v2.277.1/actions-runner-linux-x64-2.277.1.tar.gz
        remote_src: yes
        dest: ${HOME}/actions-runner/
    - name: Print instructions to activate github runner
      ansible.builtin.debug:
        msg:
          - "Go to: https://github.com/organizations/gepaplexx/settings/actions/add-new-runner and copy the token."
          - "Login to bastion host with ansible user"
          - "cd actions-runner"
          - "set environment-name:"
          - "ENVIRONMENT_NAME="
          - './config.sh --token <the copied token> --labels environment-${ENVIRONMENT_NAME} --name ${ENVIRONMENT_NAME}-bastion --url https://github.com/gepaplexx  --unattended'
          - "start runner as service:"
          - "sudo ./svc.sh install"
          - "sudo ./svc.sh start"
          - 'check if runner is online: https://github.com/organizations/gepaplexx/settings/actions with name ${ENVIRONMENT_NAME}-bastion'

...
